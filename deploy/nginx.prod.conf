upstream backend {
  server 127.0.0.1:4000;
}

# redirect www to root
server {
  server_name www.keeb.life;
  return 301 $scheme://keeb.life$request_uri;

    listen 80; # managed by Certbot

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/www.keeb.life/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/www.keeb.life/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}

server {
  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_types text/css application/javascript;

  server_name keeb.life;

  # static assets
  location ~* \.(js|ico|html)$ {
    root {{ frontend_path }}/current;
    try_files $uri =404;
  }

  # backend
  location /api {
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    Host              $http_host;

    proxy_pass http://backend;
  }

  # react routes
  location / {
    root {{ frontend_path }}/current;
    try_files $uri /index.html;
  }

    listen 80; # managed by Certbot

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/keeb.life/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/keeb.life/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot
}
